{"version":3,"sources":["config/index.js","utils/axios.js","components/Trades/dashboard/SearchTable.js","components/Trades/dashboard/coloumns.js","components/Trades/dashboard/Table.js","redux/types/rootReducerType.js","redux/actions/rootReducerAction.js","components/Nav/SidebarData.js","components/Nav/Navbar.js","components/Trades/TradesLogs/Tables.js","components/Nav/NavigationEveryPage.js","components/Trades/TradesLogs/index.js","components/Trades/dashboard/index.js","components/authentication/Login/LoginPage.js","components/Trades/settings/index.js","components/Trades/historyDashboard/index.js","App.js","reportWebVitals.js","redux/Reducers/rootReducer.js","redux/store.js","index.js"],"names":["API_URLS","baseURL","getApiCall","url","paramsData","Promise","resolve","reject","a","requestUrl","Object","values","length","keys","forEach","key","slice","axios","get","res","data","postApiCall","reqBody","post","postApiCallWithHeaders","headers","SearchTable","filter","setFilter","className","value","onChange","e","target","placeholder","COLUMNS","Header","accessor","Sorted","Table","props","columns","useMemo","propData","accountData","account","useTable","initialState","hiddenColumns","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","i","style","backgroundColor","Number","original","LastTimeStamp","prevTimeStamp","getRowProps","cells","cell","getCellProps","color","includes","undefined","FETCH_API","MERGE_API","fetchApi","payload","type","types","mergeApi","SidebarData","title","path","icon","cName","Navbar","useHistory","useState","sidebar","setSidebar","showSidebar","Provider","to","onClick","item","index","Tables","click","setClick","console","log","sortHandler","event","tradesSort","NavigationEveryPage","Date","date","setDate","pageName","history","size","onDateChangeFunc","selected","dateFormat","push","localStorage","removeItem","Trades","setData","accounts","setAccounts","setColumns","setAccount","limit","setLimit","pageNO","setPageNo","useEffect","getAccounts","label","getTrades","offset","orderBy","order","accountNo","resData","getColumns","err","limitHandler","options","xmlns","width","height","fill","class","viewBox","d","orderby","sort","opacity","Dashboard","pnlData","useSelector","timerId","useRef","dispatch","useDispatch","getPNL","clearInterval","current","timeStamp","token","getItem","header","authorization","req","accountId","time","lastTimeStamp","actions","sessionStorage","setItem","setInterval","LoginPage","redirectToDashboard","setredirectToDashboard","onSubmit","username","password","login","Swal","fire","text","formik","useFormik","initialValues","validate","errors","test","handleSubmit","id","name","handleChange","onBlur","handleBlur","touched","Settings","setValue","getBrokerage","AccountNo","Brokerage","setBrokerage","inputBrokerage","brokerage","setBrokerageRate","resetForm","HistoryDashboard","getHistoricData","newDate","getFullYear","getMonth","getDate","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mergeData","accounts_new","finalObj","dataOld","oldDataObj","convertToObject","dataNew","newDataObj","updated","sortedArr","b","list","result","rootReducer","updatedState","mergeState","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fffdf9c9.chunk.js","sourcesContent":["export const API_URLS = {\n    baseUrl: \"http://3.108.174.21:3000/\",\n    getPNL: \"trades/get-pnl\",\n    getTrades: \"trades/get-trades\",\n    login: \"authentication/login\",\n    getAccounts: \"trades/get-accounts\",\n    getBrokerage: \"trades/get-brokerage\",\n    setBrokerage: \"trades/set-brokerage\",\n    getHistoricData: \"trades/get-historic-data\"\n}\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-async-promise-executor */\nimport axios from \"axios\";\nimport { API_URLS } from \"../config\";\n\nconst baseURL = API_URLS.baseUrl;\n\n\nconst getApiCall = (url, paramsData = {}) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let requestUrl = baseURL + url;\n      const paramsLength = Object.values(paramsData);\n      if (paramsLength.length) {\n        requestUrl += `?`;\n        Object.keys(paramsData).forEach((key) => {\n          requestUrl += `${key}=${paramsData[key]}&`;\n        });\n        requestUrl = requestUrl.slice(0, -1);\n      }\n      const res = await axios.get(requestUrl);\n      resolve(res.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\nconst getApiCallWithHeader = (url, paramsData = {}, header) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let requestUrl = baseURL + url;\n      const paramsLength = Object.values(paramsData);\n      if (paramsLength.length) {\n        requestUrl += `?`;\n        Object.keys(paramsData).forEach((key) => {\n          requestUrl += `${key}=${paramsData[key]}&`;\n        });\n        requestUrl = requestUrl.slice(0, -1);\n      }\n      const res = await axios.get(requestUrl,{\n          headers: header,\n        });\n      resolve(res.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\nconst postApiCall = (url, paramsData = {}, reqBody) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let requestUrl = baseURL + url;\n      const paramsLength = Object.values(paramsData);\n      if (paramsLength.length) {\n        requestUrl += `?`;\n        Object.keys(paramsData).forEach((key) => {\n          requestUrl += `${key}=${paramsData[key]}&`;\n        });\n        requestUrl = requestUrl.slice(0, -1);\n      }\n      resolve(\n        await axios.post(requestUrl, reqBody)\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\nconst postApiCallWithHeaders = (url, paramsData = {}, reqBody, headers = null) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let requestUrl = baseURL + url;\n      const paramsLength = Object.values(paramsData);\n      if (paramsLength.length) {\n        requestUrl += `?`;\n        Object.keys(paramsData).forEach((key) => {\n          requestUrl += `${key}=${paramsData[key]}&`;\n        });\n        requestUrl = requestUrl.slice(0, -1);\n      }\n      resolve(\n        await axios.post(requestUrl, reqBody, {\n          headers: headers,\n        })\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\nexport { getApiCall, postApiCall, postApiCallWithHeaders, getApiCallWithHeader };\n","import React from \"react\";\nimport \"../styles/SearchTable.css\";\n\n\nconst SearchTable = ({ filter, setFilter }) => {\n  return (\n    <span className=\"p-2 SearchBar\">\n      <input className=\"SearchBarInput\" value={filter || \"\"} onChange={(e) => setFilter(e.target.value)} placeholder=\"Search\" />\n    </span>\n  );\n};\n\nexport default SearchTable;","export const COLUMNS = [\n  {\n    Header: \"Seg\",\n    accessor: \"Seg\",\n    Sorted: false,\n  },\n  {\n    Header: \"Symbol\",\n    accessor: \"Token\",\n    Sorted: false,\n  },\n  {\n    Header: \"Expiry\",\n    accessor: \"Expiry\",\n    Sorted: false,\n  },\n  {\n    Header: \"Opt\",\n    accessor: \"Opt\",\n    Sorted: false,\n  },\n  {\n    Header: \"Strike\",\n    accessor: \"Strike\",\n    Sorted: false,\n  },\n  {\n    Header: \"BuyQty\",\n    accessor: \"BuyQty\",\n    Sorted: false,\n  },\n  {\n    Header: \"BuyAvgPrice\",\n    accessor: \"BuyAvgPrice\",\n    Sorted: false,\n  },\n  {\n    Header: \"SellQty\",\n    accessor: \"SellQty\",\n    Sorted: false,\n  },\n  {\n    Header: \"SellAvgPrice\",\n    accessor: \"SellAvgPrice\",\n    Sorted: false,\n  },\n  {\n    Header: \"NetQty\",\n    accessor: \"TotalQty\",\n    Sorted: false,\n  },\n  {\n    Header: \"GrossPNL\",\n    accessor: \"GrossPNL\",\n    Sorted: false,\n  },\n  {\n    Header: \"NetPNL\",\n    accessor: \"NetPNL\",\n    Sorted: false,\n  },\n  {\n    Header: \"LastFillPrice\",\n    accessor: \"LastFillPrice\",\n    Sorted: false,\n  },\n  {\n    Header: \"LastTimeStamp\",\n    accessor: \"LastTimeStamp\",\n    Sorted: false,\n  },\n  {\n    Header: \"NetPosition\",\n    accessor: \"NetPosition\",\n    Sorted : false,\n  }\n];","import { render } from \"@testing-library/react\";\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport SearchTable from \"./SearchTable.js\";\nimport { useTable, useSortBy, useGlobalFilter } from \"react-table\";\nimport { COLUMNS } from \"./coloumns.js\";\nimport Sort from \"./SortIcons.js\";\nconst Table = (props) => {\n  const columns = useMemo(() => COLUMNS, []);\n  const propData = props.accountData;\n  const data = propData?.data;\n  const account = props.account;\n  // const [newData, setNewData] = useState([]);\n  // useEffect(() => {\n  //   setNewData({ ...data });\n  // }, [data]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n      // disableSortBy: false,\n      initialState: {\n        // sortBy: [{ id: \"LastTimeStamp\", desc: true }],\n        hiddenColumns: [\"LastTimeStamp\"],\n      },\n    },\n    useGlobalFilter,\n    useSortBy\n  );\n  const { globalFilter } = state;\n  // props.OnSavefilterProperties(globalFilter, setGlobalFilter);\n\n  // console.log(\"data::::::::::::::::::\", data);\n\n  return (\n    <>\n      <div className=\"my-accountHeader\">\n        <div className=\"accountID\">A/C No: {account}</div>\n        <div>\n          <SearchTable filter={globalFilter} setFilter={setGlobalFilter} />\n        </div>\n      </div>\n      <div className=\"fixedTable\">\n        <table\n          className=\"table table-striped table-section\"\n          {...getTableProps()}\n        >\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    className=\"p-2\"\n                    {...column\n                      .getHeaderProps\n                      // column.Sorted ? column.getSortByToggleProps() : \"\"\n                      ()}\n                  >\n                    {column.render(\"Header\")}\n                    {/* <span>\n                      <Sort column={column} />\n                    </span> */}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody className=\"table-body\" {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              // console.log(\"Row\", row);\n              prepareRow(row);\n              // console.log(\"Row\", row?.original?.Token);\n              return (\n                <tr\n                  style={{\n                    backgroundColor:\n                      Number(row?.original?.LastTimeStamp) >\n                      Number(propData?.prevTimeStamp)\n                        ? \"#264a9f36\"\n                        : \"inherit\",\n                  }}\n                  {...row.getRowProps()}\n                >\n                  {row.cells.map((cell) => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          color: [\"GrossPNL\", \"NetPNL\"].includes(\n                            cell.column.Header\n                          )\n                            ? cell.value > 0\n                              ? \"Green\"\n                              : \"Red\"\n                            : \"inherit\",\n                        }}\n                        className=\"p-2\"\n                      >\n                        {cell.value === undefined ? \"-\" : cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n","export const FETCH_API = 'FETCH_API';\nexport const MERGE_API  = 'MERGE_API';","import * as types from '../types/rootReducerType';\n\n const fetchApi=(payload)=>({\n    type:types.FETCH_API,\n    payload,\n});\n\n const mergeApi=(payload)=>({\n    type:types.MERGE_API,\n    payload,\n});\n\nexport { fetchApi , mergeApi};","import React from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\n\nexport const SidebarData = [{\n        title: 'Dashboard',\n        path: '/dashboard',\n        icon: < AiIcons.AiFillHome / > ,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Trades',\n        path: '/trades',\n        icon: < AiIcons.AiFillSignal / > ,\n        cName: 'nav-text'\n    },\n\n    {\n        title: 'Settings',\n        path: '/settings',\n        icon: < AiIcons.AiTwotoneTool / > ,\n        cName: 'nav-text',\n    },\n    {\n        title: 'history',\n        path: '/history',\n        icon: < AiIcons.AiOutlineAlignRight / > ,\n        cName: 'nav-text',\n    }\n\n];","import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link, Redirect, Route } from 'react-router-dom';\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Navbar() {\n  const history = useHistory();\n  const [sidebar, setSidebar] = useState(false);\n  const clickHandler = () =>{\n    history.push(\"/\");\n  }\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#4a5f94' }}>\n        <div className=''>\n            \n          <Link to='#' className='menu-bars'>\n            <FaIcons.FaBars onClick={showSidebar} />\n          </Link>\n        </div>\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n            \n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose />\n                \n              </Link>\n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}> \n                  <Link to={item.path}>\n                    {/* <Redirect to={item.path} /> */}\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { useTable } from \"react-table\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/Trades.css\";\n\nconst Tables = (props) => {\n  const [click, setClick] = useState(0);\n  const data = props.data;\n  const columns = props.columns;\n  console.log(\"data props::::::::::\", data);\n  console.log(\"columns propssssssss\", columns);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      columns,\n      data,\n    });\n  const sortHandler = (event) => {\n    if (click === 0) {\n      props.tradesSort(event.target.value, 1);\n      setClick(1);\n    } else if (click === 1) {\n      props.tradesSort(event.target.value, -1);\n      setClick(2);\n    } else {\n      props.tradesSort(event.target.value, null);\n      setClick(0);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"tradesTable\">\n        <table {...getTableProps()} className=\"table table-striped\">\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()} className=\"outer\">\n                {headerGroup.headers.map((column) => (\n                  <th className=\"p-2\" {...column.getHeaderProps()}>\n                    <button\n                      onClick={sortHandler}\n                      className=\"inner\"\n                      value={column.render(\"Header\")}\n                    >\n                      {column.render(\"Header\")}\n                    </button>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"p-2\">\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Tables;\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Trades/styles/dashboard.css\";\nimport \"./Navbar.css\";\n// import SearchTable from \"./SearchTable\";\nimport Navbar from \"./Navbar\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst NavigationEveryPage = (props) => {\n  const [date, setDate] = useState(new Date());\n  const onDateChange = (date) => {\n    // console.log(date);\n    setDate(date);\n    props.onDateChangeFunc(date);\n  };\n\n  const pageName = props.pageName;\n  \n  const history = useHistory();\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    history.push(\"/\");\n  };\n  const settingsHandler = () => {\n    history.push(\"/settings\");\n  };\n  const historyHandler=() =>{\n    history.push(\"/history\");\n  }\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"navigationPage\">\n          <div className=\"navigationPageItem\">\n            <div className=\"item-1\">\n              <Navbar />\n            </div>\n          </div>\n          <div className=\"navigationPageItem\">\n            <div className=\"color-forHeadings item-2\">{pageName}</div>\n          </div>\n          <div className=\"navigationPageItem\">\n            <div className=\"item-3\">\n              {pageName === \"History\" ? (\n                <>\n                  <div className=\"item-3-icon\">\n                    <Icon.CalendarFill color=\"white\" size={20} />\n                  </div>\n                  <div>\n                    <DatePicker\n                      onChange={onDateChange}\n                      selected={date}\n                      dateFormat=\"dd-MM-yyyy\"\n                    />\n                  </div>\n                </>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div className=\"navigationPageItem\">\n            <div className=\"item-4\">\n              <div className=\"arrowDropdown container d-flex justify-content-between align-items-center my-dropdown\">\n                <div className=\"dropdown\">\n                  <span className=\"Logout\">\n                    <Icon.CaretDownFill color=\"#4a5f94\" size={30} />\n                  </span>\n                  <div className=\"dropdown-content\">\n                    <ul>\n                      <li>\n                        <Icon.PersonFill size={25} />\n                        &nbsp;Admin Profile\n                      </li>\n                      <li onClick={settingsHandler}>\n                        <Icon.Gear />\n                        &nbsp;Settings\n                      </li>\n                      <li onClick={historyHandler}>\n                        <Icon.ClockHistory />\n                        &nbsp;User history\n                      </li>\n                      <li className=\"dropdown_elements\" onClick={logout}>\n                        <Icon.BoxArrowRight />\n                        &nbsp;Logout\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr />\n      </div>\n    </>\n  );\n};\n\nexport default NavigationEveryPage;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport Select from \"react-select\";\nimport Tables from \"./Tables.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/Trades.css\";\nimport axios from \"axios\";\nimport { getApiCall, postApiCall } from \"../../../utils/axios\";\nimport { API_URLS } from \"../../../config\";\nimport NavigationEveryPage from \"../../Nav/NavigationEveryPage\";\n\nconst Trades = () => {\n  const [data, setData] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [account, setAccount] = useState();\n  const [limit, setLimit] = useState(10);\n  const [pageNO, setPageNo] = useState(0);\n  // const [click, setClick] = useState(null)\n  useEffect(() => {\n    getAccounts();\n  }, []);\n\n  const getAccounts = async () => {\n    try {\n      const res = await getApiCall(API_URLS.getAccounts, {});\n      const data = res?.res\n        ? res?.res?.map((data) => {\n            return {\n              label: data,\n              value: data,\n            };\n          })\n        : [];\n      setAccounts([...data]);\n      console.log(\"datasetAccounts\", data);\n    } catch (err) {}\n  };\n  const getTrades = async (account, limit = 10, offset = 0,orderBy= \"\",order=null) => {\n    try {\n      const res = await postApiCall(\n        API_URLS.getTrades,\n        {},\n        { limit: limit, offset: offset, accountNo: account,orderBy: orderBy,order: order}\n      );\n      const resData = res?.data?.res?.data;\n      console.log(\"Res data\", resData);\n      if (resData?.length) {\n        const columns = getColumns(resData[0]);\n        console.log(\"Res data\", resData);\n        setData([...resData]);\n        setColumns([...columns]);\n      }\n    } catch (err) {\n      console.log(\"Error in getTrades\", err);\n    }\n  };\n\n  const getColumns = (row) => {\n    try {\n      const columns = Object.keys(row).map((item) => {\n        return {\n          Header: item,\n          accessor: item,\n        };\n      });\n      return columns;\n    } catch (err) {\n      console.log(\"Error in getColumns\", err);\n      return [];\n    }\n  };\n\n  const sortHandler = (orderby, sort) =>{\n    getTrades(account,limit,pageNO,orderby, sort);\n  }\n  const selectHandler = (event) => {\n    setAccount(event.value);\n    getTrades(event.value);\n  };\n\n  console.log(\"account::::::::::::\", account);\n\n  const limitHandler = (event) => {\n    console.log(event.target.value);\n    setLimit(event.target.value !== \"\" ? Number(event.target.value) : 10);\n    getTrades(\n      account,\n      event.target.value !== \"\" ? Number(event.target.value) : 10,\n      pageNO\n    );\n  };\n\n  const pageHandler = (event) => {\n    setPageNo(event.target.value !== \"\" ? Number(event.target.value - 1) : 0);\n    getTrades(\n      account,\n      limit,\n      event.target.value !== \"\" ? Number(event.target.value - 1) : 0\n    );\n  };\n\n  const leftButtonHandler = () => {\n    if (pageNO) {\n      setPageNo(pageNO - 1);\n      getTrades(account, limit, pageNO - 1);\n    }\n  };\n\n  const rightButtonHandler = () => {\n    setPageNo(pageNO + 1);\n    getTrades(account, limit, pageNO + 1);\n  };\n  return (\n    <>\n      <div className=\"tradesBody\">\n        <div className=\"\">\n          <NavigationEveryPage pageName=\"Trade Logs\" />\n        </div>\n\n        <div className=\"my-con dashcard-table\">\n          <div className=\"tradesContent tradesContentItem \">\n            <div className=\"select my-col\">\n              <Select\n                options={accounts}\n                onChange={selectHandler}\n                placeholder=\"Select Account\"\n                className=\"select\"\n                // value={}\n              />\n            </div>\n            <div className=\"recordPerPage\">\n              {account ? (\n                <div className=\"tradesDropdown\">\n                  <p>\n                    Trades per Page{\" \"}\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      class=\"bi bi-caret-down-fill\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\n                    </svg>\n                  </p>\n                  <div className=\"tradesDropdownContent\">\n                    <button value=\"10\" onClick={limitHandler}>\n                      10\n                    </button>\n                    <hr />\n                    <button value=\"15\" onClick={limitHandler}>\n                      15\n                    </button>\n                    <hr />\n                    <button value=\"20\" onClick={limitHandler}>\n                      20\n                    </button>\n                    <hr />\n                    <button value=\"25\" onClick={limitHandler}>\n                      25\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n\n            {/* <div className=\"col-12 my-col\">{resultValue}</div> */}\n          </div>\n          <div className=\"row tradesContent\">\n            <div className=\"col-12 my-col\">\n              {data?.length ? (\n                <Tables data={data || []} columns={columns} tradesSort={sortHandler}/>\n              ) : account ? (\n                <div className=\"h4 color-forHeadings\">No data found</div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          {account ? (\n            <div className=\"my-pagination color-forHeadings\">\n              <button\n                style={{\n                  color: pageNO !== 0 ? \"#264a9f\" : \"black\",\n                  opacity: pageNO !== 0 ? \"1\" : \"0\",\n                }}\n                onClick={leftButtonHandler}\n              >\n                &laquo;\n              </button>\n              Page:&nbsp;\n              <input\n                type=\"text\"\n                onChange={pageHandler}\n                placeholder={pageNO + 1}\n              />\n              <button onClick={rightButtonHandler}>&raquo;</button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Trades;\n","import React, { useEffect, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/dashboard.css\";\nimport { getApiCall, postApiCallWithHeaders } from \"../../../utils/axios\";\nimport { API_URLS } from \"../../../config\";\nimport Table from \"./Table\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SearchTable from \"./SearchTable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../redux/actions/rootReducerAction\";\nimport Searchable from \"react-searchable/lib/Searchable\";\nimport Navbar from \"../../Nav/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { icons } from \"react-icons/lib\";\nimport Trades from \"../TradesLogs\";\nimport NavigationEveryPage from \"../../Nav/NavigationEveryPage\";\n\nconst Dashboard = () => {\n  // const [new_data, setNewData] = useState([]);\n  const pnlData = useSelector((state) => state.pnlData);\n  const timerId = useRef(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [data, setData] = useState({});\n\n\n  useEffect(() => {\n    getPNL();\n    return () => {\n      clearInterval(timerId.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    setData({ ...pnlData });\n  }, [pnlData]);\n  const getPNL = async (timeStamp = null) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      console.log(\"timestamp:\", timeStamp);\n\n      const header = {\n        authorization: `Bearer ${token}`,\n      };\n      const req = timeStamp ? { timeStamp } : {};\n      const res = await postApiCallWithHeaders(\n        API_URLS.getPNL,\n        {},\n        req,\n        header\n      );\n\n      const resData = res?.data?.res;\n      const accountId = Object.keys(resData)[0];\n      const time = resData[accountId].lastTimeStamp;\n      if (timeStamp === null) {\n        console.log(\"No TimeStamp:::::\");\n        dispatch(actions.fetchApi(resData));\n      } else {\n        console.log(\"TimeStamp:::::\");\n        dispatch(actions.mergeApi(resData));\n      }\n\n      sessionStorage.setItem(\"TimeStamp\", time);\n      if (timerId.current === null) {\n        console.log(\"timerid \", timerId.current);\n        timerId.current = setInterval(() => getPNL(time), 5000);\n      }\n    } catch (err) {\n      console.log(\"Error in GetPNL\", err);\n    }\n  };\n  return (\n    <>\n      <div className=\"dashboardPage\">\n        <div className=\"navigation\">\n          <NavigationEveryPage pageName=\"Dashboard\" />\n        </div>\n        <div className=\"container-fluid\">\n          {data &&\n            Object.keys(data).map((account) => {\n              // console.log(\"data:::::::::s\",data)\n              console.log(\"account:::\", account);\n              console.log(\"::::\",Object.keys(data))\n              return (\n                <>\n                  <div className=\"dashcard-table\">\n                    <div className=\"\">\n                      {data[account]?.data?.length ? (\n                        <Table\n                          accountData={data[account]}\n                          account={account}\n                          key={account}\n                        />\n                      ) : (\n                        \"No Data to show\"\n                      )}\n                    </div>\n                  </div>\n                </>\n              );\n            })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/LoginPage.css\";\nimport { postApiCall } from \"../../../utils/axios\";\nimport { API_URLS } from \"../../../config\";\nimport { Redirect } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\nconst LoginPage = () => {\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n  };\n  const [redirectToDashboard, setredirectToDashboard] = useState(false);\n\n  const onSubmit = async (values) => {\n    try {\n      console.log(\"form data\", values);\n      if (values?.username && values?.password) {\n        const res = await postApiCall(API_URLS.login, {}, values);\n        if (res?.data?.res?.login === \"success\") {\n          if (res?.data?.res?.token) {\n            localStorage.setItem(\"token\", res?.data?.res?.token);\n          }\n          setredirectToDashboard(true);\n        }\n        console.log(\"Res\", res);\n      }\n    } catch (err) {\n      console.log(\"Error\", err);\n      Swal.fire({\n        title: \"Try again\",\n        type: \"success\",\n        text: \"Invalid username or password\",\n      });\n    }\n  };\n  useEffect(() => {}, [redirectToDashboard]);\n\n  const validate = (values) => {\n    let errors = {};\n    if (!values.username) {\n      errors.username = \"Username is required\";\n    }\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (\n      !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,30}$/i.test(\n        values.password\n      )\n    ) {\n      errors.password = \"invalid password\";\n    }\n    // written the regex code for password that takes minimum 8 characterss\n    // and maximum 30- at least one upper case, one lowercase, one number\n    // and one special character\n    return errors;\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate,\n  });\n\n  return (\n    <>\n      {redirectToDashboard ? (\n        <Redirect to=\"/dashboard\" />\n      ) : (\n        <div className=\"loginBody\">\n          <div className=\" my-container mt-5\">\n            <div className=\"header middle\">\n              <h2 className=\"color-forHeadings\">Log In to your Account</h2>\n            </div>\n\n            <form onSubmit={formik.handleSubmit} className=\"myForm\">\n              <div className=\"my-row\">\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.username}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  {formik.touched.username && formik.errors.username ? (\n                    <div className=\"error\">{formik.errors.username}</div>\n                  ) : null}\n                </div>\n              </div>\n              <div className=\"my-row\">\n                <div className=\"col-12\">\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.password}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  {formik.touched.password && formik.errors.password ? (\n                    <div className=\"error\">{formik.errors.password}</div>\n                  ) : null}\n                </div>\n              </div>\n              <div className=\"my-row\">\n                <div className=\"col-12\">\n                  <button type=\"submit\" className=\"btn col-12 my-btn\">\n                    Log In\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getApiCall, postApiCall } from \"../../../utils/axios\";\nimport { API_URLS } from \"../../../config/index\";\nimport Select from \"react-select\";\nimport \"../styles/settings.css\";\nimport NavigationEveryPage from \"../../Nav/NavigationEveryPage\";\nimport { useFormik } from \"formik\";\n\nconst Settings = () => {\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState();\n  const [newValue,setNewValu]=useState();\n  const [account, setAccount] = useState();\n  useEffect(() => {\n    getBrokerage();\n  }, [value]);\n  const getBrokerage = async () => {\n    try {\n      const res = await getApiCall(API_URLS.getBrokerage, {});\n      const data = res?.res?.map((item) => {\n        return {\n          label: item.AccountNo,\n          value: item.Brokerage,\n        };\n      });\n      //   console.log(\"data:::::::::\", data);\n      setData([...data]);\n    } catch (err) {\n      console.log(\"Error in getBrokerage \", err);\n    }\n  };\n\n  const setBrokerage = async (account, inputBrokerage) => {\n    try {\n      const res = await postApiCall(\n        API_URLS.setBrokerage,\n        {},\n        { accountNo: account, brokerage: inputBrokerage }\n      );\n      const data = res?.res?.map((item) => {\n        return {\n          label: item.AccountNo,\n          value: item.Brokerage,\n        };\n      });\n      setData([...data]);\n    } catch (err) {\n      console.log(\"Error in setBrokerage\", err);\n    }\n  };\n\n  const selectHandler = (event) => {\n    // console.log(event.label);\n    setAccount(event.label);\n    setValue(event.value);\n    console.log(\"value\", value);\n  };\n\n  // const brokerageRateHandler = (event) => {\n  //   console.log(\"account:::\", account);\n  //   setValue(event.target.value);\n  //   //   setBrokerag ChevronCompactLefte(account,Number(event.target.value));\n  //   //   setValue(Number(event.target.value));\n  // };\n  // const submitHandler = () => {\n  //   console.log(\"value:::::\", value);\n  //   setBrokerage(account, Number(value));\n  // };\n\n  const initialValues = {\n    setBrokerageRate: \"\",\n  };\n  // const clearInput = () =>{\n    \n  // }\n  const onSubmit = (values,{resetForm}) => {\n    if (values?.setBrokerageRate) {\n      setBrokerage(account, values?.setBrokerageRate);\n      setValue(values?.setBrokerageRate);\n      values.setBrokerageRate = \"\";\n      resetForm({values:\"\"})\n    }\n  };\n  const validate = (values) => {\n    let errors = {};\n    if (!values.setBrokerageRate) {\n      errors.setBrokerageRate = \"Brokerage rate is required\";\n    }\n    return errors;\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate,\n  });\n\n  return (\n    <>\n      <div className=\"SettingsPage\">\n        <div>\n          <NavigationEveryPage pageName=\"Settings\" />\n        </div>\n\n        <div className=\"container-fluid \">\n          <div className=\"setCard\">\n            <form onSubmit={formik.handleSubmit}>\n              <div className=\"SelecttAccount\">\n                <Select\n                  className=\"AccountSelectofSetPage\"\n                  options={data}\n                  onChange={selectHandler}\n                  placeholder=\"Select Account\"\n                />\n              </div>\n              {account ? (\n                <div>\n                  <div className=\"SetBrokerageofSetPage\">\n                    <div className=\"EnterRatefield\">\n                      Current Brokerage Value : {value}\n                    </div>\n                  </div>\n                  <div className=\"setBrokerageValue\">\n                    <div>\n                      <input\n                        className=\"enterbrokerageinputbox\"\n                        placeholder=\"Set Brokerage value in %\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.setBrokerageRate}\n                        name=\"setBrokerageRate\"\n                      />\n                    </div>\n                    <div className=\"col-12\">\n                      {formik.touched.setBrokerageRate && formik.errors.setBrokerageRate ? (\n                        <div className=\"error\">{formik.errors.setBrokerageRate}</div>\n                      ) : null}\n                    </div>\n                  </div>\n                  \n                  <div className=\" submittButton\">\n                    {/* <button className = \"BrokerageSubmitButton\" onClick={submitHandler}> Set Rate</button> */}\n                    <button type=\"submit\" className=\"BrokerageSubmitButton\">\n                      Set Rate\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                \" \"\n              )}\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport NavigationEveryPage from \"../../Nav/NavigationEveryPage\";\nimport { postApiCall } from \"../../../utils/axios\";\nimport { API_URLS } from \"../../../config\";\nimport Table from \"../dashboard/Table\";\nimport uuid from \"node-uuid\";\nconst HistoryDashboard = () => {\n  const [data, setData] = useState([]);\n  const [date,setDate] = useState();\n  const onDateChangeFunc = (date) => {\n    const d = date;\n    const newDate =\n      d.getFullYear() +\n      \"-\" +\n      (d.getMonth() + 1 < 10 ? \"0\" + (d.getMonth() + 1) : d.getMonth() + 1) +\n      \"-\" +\n      (d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate());\n      setDate(newDate);\n    console.log(newDate);\n    getHistoricData(newDate);\n  };\n  const getHistoricData = async (date) => {\n    const res = await postApiCall(API_URLS.getHistoricData, {}, { date: date });\n    const data = res?.data?.res;\n    setData({ ...data });\n  };\n\n  return (\n    <>\n      <div className=\"dashboardPage\">\n        <div className=\"navigation\">\n          <NavigationEveryPage\n            pageName=\"History\"\n            onDateChangeFunc={onDateChangeFunc}\n          />\n        </div>\n        <div className=\"container-fluid\">\n          {date?\n          <>\n          {console.log(\"data::::\",data)}\n            {data &&\n              Object.keys(data).map((account) => {\n                console.log(\"account:::\", account);\n                return (\n                  <>\n                    <div className=\"dashcard-table\">\n                      <div className=\"\">\n                        {data[account]?.data?.length ? (\n                          <Table\n                            key = {account}\n                            accountData={data[account]}\n                            account={account}\n                          />\n                        ) : (\n                          \"No Data to show\"\n                        )}\n                      </div>\n                    </div>\n                  </>\n                );\n              })}\n          </>:\"Please Select Date\"}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default HistoryDashboard;\n","import { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Trades/dashboard\";\nimport LoginPage from \"./components/authentication/Login/LoginPage\";\nimport Trades from \"./components/Trades/TradesLogs\";\n//import SignupForm from './components/SignupForm';\nimport Settings from \"./components/Trades/settings\";\nimport HistoryDashboard from \"./components/Trades/historyDashboard\"\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path =\"/trades\" component = {Trades}/>\n          <Route exact path =\"/settings\" component = {Settings}/>\n          <Route exact path=\"/history\" component={HistoryDashboard} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../types/rootReducerType\";\n\nconst initialState = null;\nconst mergeData = (state, payload) => {\n  try {\n    const accounts_new = Object.keys(payload);\n    const finalObj = {};\n    accounts_new.forEach((accountNo) => {\n      const dataOld =\n        state && state[accountNo]?.data ? state[accountNo]?.data : null;\n      const oldDataObj = dataOld ? convertToObject(dataOld, \"Token\") : {};\n      const dataNew =\n        payload && payload[accountNo]?.data ? payload[accountNo] : null;\n      const newDataObj = dataNew ? convertToObject(dataNew, \"Token\") : {};\n      const updated = {...oldDataObj};\n      Object.keys(newDataObj).forEach((token)=>{\n          updated[token] = newDataObj[token];\n      })\n      const sortedArr = Object.values(updated).sort((a, b) => {\n        //   console.log(\"a\",a);\n        return b?.LastTimeStamp - a?.LastTimeStamp;\n      });\n      // console.log(\"SortedArr\", sortedArr);\n      finalObj[accountNo] = {\n        prevTimeStamp: state[accountNo]?.lastTimeStamp,\n        lastTimeStamp:\n          (payload[accountNo]?.lastTimeStamp)?(payload[accountNo]?.lastTimeStamp): (state[accountNo]?.lastTimeStamp),\n        data: [...sortedArr],\n      };\n    });\n    // console.log(\"final:::\",finalObj);\n    return finalObj;\n  } catch (err) {\n    console.log(\"Error in mergeData\", err);\n    return {};\n  }\n};\n\nconst convertToObject = (list, key) => {\n  try {\n    const result = {};\n    for (var i = 0; i < list.length; i++) {\n      result[list[i][\"Token\"]] = list[i];\n    }\n    return result;\n  } catch (err) {\n    console.log(\"Error in convertToObject\", err);\n  }\n};\n\nconst rootReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.FETCH_API: {\n      const updatedState = payload;\n      console.log(\"fetch executed\");\n      return { ...updatedState };\n    }\n    case types.MERGE_API: {\n      const mergeState = mergeData(state, payload);\n      console.log(\"merge executed\");\n      return { ...mergeState };\n    }\n    default:\n      console.log(\"default executed\");\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./Reducers/rootReducer\";\n\nexport const store = createStore(\n  combineReducers({pnlData:rootReducer}),\n  composeWithDevTools(applyMiddleware(thunk))\n);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}